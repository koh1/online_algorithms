

2.4.3 乱択アルゴリズムの下界の証明
-----------------------------------------------------------------
* 乱択アルゴリズムで改良するのは **「最悪の入力に対する計算コスト」** であり、入力の平均を取った計算量(平均計算量: average complexity)の改善は難しい。
* 任意の乱択アルゴリズムは、乱数を固定すると決定性アルゴリズムになる。
* 任意の乱択アルゴリズムは、起こりうる乱数の組合せ(例: コインの表裏の可能な列の組合せ)数だけの種類の決定性アルゴリズムを用意し、そこから確率的にアルゴリズムを選ぶ、とみなすことができる。
* 故に平均計算量では、これらの用意された決定性アルゴリズムの平均計算量の重み付き平均になるので、ベストな決定性アルゴリズムの平均計算量に勝つことは不可能

  * →Yaoのミニマックス原理 (Yao's minimax principle)

定理2.14 Yaoのミニマックス原理 (オンラインアルゴリズム版)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
..
  
  乱択アルゴリズムALGの性能は、入力列の確率分布 :math:`y` を決めると、分布 :math:`y` に対してもっとも平均的性能の良い決定性アルゴリズムの平均的性能を越えることができない

定理2.15 クーポンコレクタ定理 (Coupon Collector theorem)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
..
  

  :math:`m` 種類のクーポンがあり、買い物をするたびにクーポンを1枚もらえるが、各々のクーポンを貰える確率はそれぞれ :math:`1/m` で独立である。このときに、すべてのクーポンを揃えるのに必要な買い物の回数の期待値は :math:`mH_m` である。



